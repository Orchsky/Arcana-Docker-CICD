trigger:
  - main

pool: $(AgentPool)

variables:
  - name: DockerCredentials
    value: "docker credentials" 
  - name: ContainerRepo
    value: "starseed7777/arcana"
  - name: Dockerfile
    value: "Dockerfile"
  - name: DockerComposeFile
    value: "docker-compose.yml"
  - name: SmokeTestFile
    value: "$(System.DefaultWorkingDirectory)/smoketest.ps1"
  - name: AgentPool
    value: "demo"
  - name: k8s-service-connection
    value: "arcana-k8s"
  - name: k8s-namespace
    value: "arcana"
  - name: k8s-file
    value: "deployment.yml"

stages:
- stage: validationdev
  jobs:
  - job: validation_dev
    steps:
    - task: Docker@2
      displayName: Docker Build DEV
      inputs:
        containerRegistry: $(DockerCredentials)
        repository: $(ContainerRepo)
        command: 'build'
        Dockerfile: $(Dockerfile)
        tags: '$(Build.BuildNumber)-DEV'    
    
    - task: DockerCompose@0
      displayName: Docker Compose
      inputs:
        containerregistrytype: 'Container Registry'
        dockerRegistryEndpoint: '$(DockerCredentials)'
        dockerComposeFile: '$(DockerComposeFile)'
        action: 'Run a Docker Compose command'
        dockerComposeCommand: 'up'
        arguments: '-d'
        currentWorkingDirectory: '$(System.DefaultWorkingDirectory)'
    - task: PowerShell@2
      displayName: Smoke Test
      inputs:
        filePath: $(SmokeTestFile)
    - task: Docker@2
      displayName: Docker Push DEV
      inputs:
        containerRegistry: $(DockerCredentials)
        repository: $(ContainerRepo)
        command: 'push'
        tags: '$(Build.BuildNumber)-DEV'
- stage: buildpushproduction
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
  jobs:
  - job: build_push_prod
    steps:
    - task: Docker@2
      displayName: Docker Build PROD
      inputs:
        containerRegistry: $(DockerCredentials)
        repository: $(ContainerRepo)
        command: 'build'
        Dockerfile: 'Dockerfile'
        tags: 'PROD'        
    - task: Docker@2
      displayName: Docker Push PROD
      inputs:
        containerRegistry: $(DockerCredentials)
        repository: $(ContainerRepo)
        command: 'push'
        tags: 'PROD'
- stage: deployproduction
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
  jobs:
  - job: deploy_production
    steps:
    - task: Kubernetes@1
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: $(k8s-service-connection)
        namespace: $(k8s-namespace)
        command: 'apply'
        useConfigurationFile: true
        configuration: $(k8s-file)
        secretType: 'dockerRegistry'
        containerRegistryType: 'Azure Container Registry'
